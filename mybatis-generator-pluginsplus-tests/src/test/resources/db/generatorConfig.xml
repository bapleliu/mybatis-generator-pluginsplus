<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2014.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <context id="tables" targetRuntime="MyBatis3" defaultModelType="conditional"> <!-- flat, hierarchical, conditional -->
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.CommonTablePropertiesPlugin">
            <property name="ignoreQualifiersAtRuntime" value="true"/>
        </plugin>
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.JDBCTypesPlugin">
            <property name="from:CLOB" value="VARCHAR"/>
            <property name="from:/(?i)TIMESTAMP\b.*/" value="TIMESTAMP, java.util.Date"/>
        </plugin>
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.BooleanTypePlugin" />
        <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin" >
            <property name="searchString" value="Example$"/>
            <property name="replaceString" value="Criteria"/>
        </plugin>
        <plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.ToStringPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.DistinctPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.MapPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.JoinPlugin"/>
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.SelectiveWithNullPlugin">
            <property name="insertSelectiveWithNullMethodName" value="insertSelectiveWithNull"/>
            <property name="updateByExampleSelectiveWithNullMethodName" value="updateSelectiveWithNull"/>
            <property name="updateByPrimaryKeySelectiveWithNullMethodName" value="-"/>
        </plugin>
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.AnyCriteriaPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.NullableInCriteriaPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.ExampleMethodsChainPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.SimpleOrCriteriaPlugin" />
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.PaginationPlugin" >
            <property name="dialect" value="hsql"/>
        </plugin>

        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.FieldMetadataPlugin" >
            <property name="annotation-class" value="javax.validation.constraints.Size"/>
            <property name="field-annotation-template" value="@Size(max=#{column.length})"/>
            <property name="setter-annotation-template" value="@Size(max=#{column.length})"/>
            <property name="setter-parameter-annotation-template" value="@Size(max=#{column.length})"/>
            <!--
            <property name="getter-annotation-template" value="@Size(max=#{column.length})"/>
            -->
            <property name="field-filter" value="is(field,'java.lang.String') and not in(lower(column.jdbcTypeName),'text','clob')"/>
        </plugin>
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.FieldMetadataPlugin" >
            <property name="annotation-class" value="javax.validation.constraints.NotNull"/>
            <property name="field-filter" value="not column.nullable and not field.type.primitive"/>
        </plugin>

        <!--
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.FieldMetadataPlugin" >
            <property name="annotation-class" value="javax.persistance.Id"/>
            <property name="field-filter" value="
                in(field.name, attr(table.primaryKeyColumns, 'javaProperty' )  ) 
                and 
                count(table.primaryKeyColumns) == 1
            "/>
        </plugin>
        -->

        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.LombokSupportPlugin">
            <property name="toString-annotation-template" value="@ToString(exclude={#{quote(attr(table.blobColumns,'javaProperty'))}})"/>
            <property name="equals-and-hashcode-filter" value="count(table.primaryKeyColumns) gt 0"/>
            <property name="equals-and-hashcode-template" value="@EqualsAndHashCode(of={#{quote(attrs(table.primaryKeyColumns,'javaProperty'))}})"/>
            <property name="use-lombok-builder" value="true"/>
        </plugin>

        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.SuperclassPlugin">
            <property name="model-class-extends" value="xyz.vsl.mybatis.generator.pluginsplus.Entity&lt;*&gt;"/>
            <property name="model-class-implements" value="java.io.Serializable;xyz.vsl.mybatis.generator.pluginsplus.JsonSerializable&lt;*&gt;"/>
            <property name="mapper-class-extends" value="xyz.vsl.mybatis.generator.pluginsplus.ReadOnlyMapper&lt;*example,*base&gt;"/>
        </plugin>

        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.SuperclassPlugin">
            <property name="mapper-class-extends" value="xyz.vsl.mybatis.generator.pluginsplus.PrimaryKeyMapper&lt;*java.pk.class,*base&gt;"/>
            <property name="mapper-class-extends-if" value="pk.size() == 1 and not pk[0].primitive"/>
        </plugin>

        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.SuperclassPlugin">
            <property name="mapper-class-extends" value="xyz.vsl.mybatis.generator.pluginsplus.ReadOnlyBLOBMapper&lt;*example,*model&gt;"/>
            <property name="mapper-class-extends-if" value="table.hasBLOBColumns()"/>
        </plugin>

        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.ModelSettersChainPlugin">
            <property name="prefix" value=""/>
        </plugin>
        <plugin type="xyz.vsl.mybatis.generator.pluginsplus.AddCriteriaActionsPlugin" />

        <!--
        <plugin type="org.mybatis.generator.plugins.AddComplexCriteriaPlugin" >
            <property name="methodName" value="andIsVisible"/>
            <property name="methodBody" value="andIsActiveEqualTo(true); andIsDeletedEqualTo(false);"/>
        </plugin>
        -->

        <plugin type="org.mybatis.generator.plugins.SqlMapConfigPlugin" >
            <property name="targetPackage" value="xyz.vsl.mybatis.generator.pluginsplus.gen"/>
            <property name="targetProject" value="src/gen/resources"/>
        </plugin>



        <jdbcConnection driverClass="org.hsqldb.jdbc.JDBCDriver"
                        connectionURL="jdbc:hsqldb:file:mybatis-generator-pluginsplus-tests/src/test/resources/db/testdb;ifexists=true;readonly=true"
                        userId="sa" password="">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <javaModelGenerator targetPackage="xyz.vsl.mybatis.generator.pluginsplus.gen" targetProject="MAVEN">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            <property name="constructorBased" value="false"/>
        </javaModelGenerator>

        <sqlMapGenerator targetPackage="xyz.vsl.mybatis.generator.pluginsplus.gen" targetProject="MAVEN">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true" />
        </sqlMapGenerator>

        <javaClientGenerator type="XMLMAPPER" targetPackage="xyz.vsl.mybatis.generator.pluginsplus.gen" targetProject="MAVEN">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <table tableName="system_event_type" alias="_T_">
            <property name="boolean-varchar-columns" value="is_active"/>
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
        </table>

        <table schema="public" tableName="system_events">
            <property name="distinctVarcharColumns" value="ulogin"/>
            <property name="boolean-integer-columns" value="successful, is_deleted"/>
            <generatedKey column="id" sqlStatement="JDBC" identity="true"/>
        </table>

        <table tableName="system_logo"/>

    </context>
</generatorConfiguration>